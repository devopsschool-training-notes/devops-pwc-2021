
A Quick Tutorial of Helm
--------------------------------------------
What is Package Manager?
Package Manager contains many software package which is easy to install - remove and update. example of package manager includes yum, apt, nuget, chcoclate, play store, apple store.


What is Helm?
- Package Manager for installing kubernetes package
- kubernetes helm package is being called "CHART"

What is kubernetes helm package?
kubernetes helm package is collection of kubernetes API resources yaml file which can be stored with certain structure for easy one click install-update-remove.

How to install helm?
- helm client must be installed in kubectl workstation
- Download your desired version
- Unpack it (tar -zxvf helm-v3.0.0-linux-amd64.tar.gz)
- Find the helm binary in the unpacked directory, and move it to its desired destination (mv linux-amd64/helm /usr/local/bin/helm)
https://helm.sh/docs/intro/install/


How to use helm for Install - updating - removing a helm package called "CHART"?

Step 1 - Visit a helm.sh --> https://artifacthub.io/

Step 2 - Search & Identify a desire chart which you want to install in k8 cluster?

Step 3 - Add helm repo e.g tomcat chat
$ helm repo add bitnami https://charts.bitnami.com/bitnami

Step 4 - Install chart eg. tomcat
$ helm install my-release bitnami/tomcat


How to create custom helm chart?
$ 

$ How to install Local chart?
$ helm install scmgalaxy ./scmgalaxy 






389  wget https://get.helm.sh/helm-v3.6.2-linux-amd64.tar.gz
  390  clear
  391  ls
  392  tar -zxvf helm-v3.6.2-linux-amd64.tar.gz
  393  clear
  394  ls
  395  cd linux-amd64
  396  ls
  397  echo $PATH
  398  mv helm /usr/local/bin
  399  helm
  400  helm -v
  401  helm --version
  402  helm -version
  403  helm version
  404  history
  405  clear
  406  helm repo add bitnami https://charts.bitnami.com/bitnami
  407  helm install my-release bitnami/tomcat
  408  helm
  409  helm list
  410  helm show
  411  helm show all
  412  helm inspect all
  413  helm show
  414  helm show -h
  415  helm show all chart
  416  helm show chart
  417  helm show chart all
  418  helm show
  419  helm show all -h
  420  clear
  421  helm
  422  helm list
  423  helm uninstall my-release
  424  helm list
  425  helm install my-release bitnami/tomcat
  426  helm list
  427  helm status
  428  helm status my-release
  429  clear
  430  ls
  431  cd
  432  ls
  433  ls -la
  434  date
  435  cd .config
  436  ls
  437  cd ..
  438  cd -
  439  l
  440  ls
  441  cd helm
  442  ls
  443  cd ..
  444  ls
  445  cd ..
  446  ls
  447  clear
  448  ls
  449  ls -la
  450  ls .cache
  451  pwd
  452  cd .cache/
  453  ls
  454  cd helm/
  455  ls
  456  cd repository/
  457  ls
  458  clear
  459  ls
  460  cp tomcat-9.2.16.tgz $HOME
  461  cd $HOME
  462  ls
  463  tar -zxvf tomcat-9.2.16.tgz
  464  clear
  465  ls
  466  cd tomcat
  467  ls
  468  clear
  469  tree
  470  ls
  471  yum install tree -y
  472  clear
  473  tree
  474  ls
  475  cd ..
  476  clear
  477  ls
  478  cd k8/
  479  clear
  480  ls
  481  helm
  482  helm create scmgalaxy
  483  ls
  484  clear
  485  tree
  486  helm install -h
  487  history
  
  
  [root@rajesh k8]# helm
The Kubernetes package manager

Common actions for Helm:

- helm search:    search for charts
- helm pull:      download a chart to your local directory to view
- helm install:   upload the chart to Kubernetes
- helm list:      list releases of charts

Environment variables:

| Name                               | Description                                                                       |
|------------------------------------|-----------------------------------------------------------------------------------|
| $HELM_CACHE_HOME                   | set an alternative location for storing cached files.                             |
| $HELM_CONFIG_HOME                  | set an alternative location for storing Helm configuration.                       |
| $HELM_DATA_HOME                    | set an alternative location for storing Helm data.                                |
| $HELM_DEBUG                        | indicate whether or not Helm is running in Debug mode                             |
| $HELM_DRIVER                       | set the backend storage driver. Values are: configmap, secret, memory, postgres   |
| $HELM_DRIVER_SQL_CONNECTION_STRING | set the connection string the SQL storage driver should use.                      |
| $HELM_MAX_HISTORY                  | set the maximum number of helm release history.                                   |
| $HELM_NAMESPACE                    | set the namespace used for the helm operations.                                   |
| $HELM_NO_PLUGINS                   | disable plugins. Set HELM_NO_PLUGINS=1 to disable plugins.                        |
| $HELM_PLUGINS                      | set the path to the plugins directory                                             |
| $HELM_REGISTRY_CONFIG              | set the path to the registry config file.                                         |
| $HELM_REPOSITORY_CACHE             | set the path to the repository cache directory                                    |
| $HELM_REPOSITORY_CONFIG            | set the path to the repositories file.                                            |
| $KUBECONFIG                        | set an alternative Kubernetes configuration file (default "~/.kube/config")       |
| $HELM_KUBEAPISERVER                | set the Kubernetes API Server Endpoint for authentication                         |
| $HELM_KUBECAFILE                   | set the Kubernetes certificate authority file.                                    |
| $HELM_KUBEASGROUPS                 | set the Groups to use for impersonation using a comma-separated list.             |
| $HELM_KUBEASUSER                   | set the Username to impersonate for the operation.                                |
| $HELM_KUBECONTEXT                  | set the name of the kubeconfig context.                                           |
| $HELM_KUBETOKEN                    | set the Bearer KubeToken used for authentication.                                 |

Helm stores cache, configuration, and data based on the following configuration order:

- If a HELM_*_HOME environment variable is set, it will be used
- Otherwise, on systems supporting the XDG base directory specification, the XDG variables will be used
- When no other location is set a default location will be used based on the operating system

By default, the default directories depend on the Operating System. The defaults are listed below:

| Operating System | Cache Path                | Configuration Path             | Data Path               |
|------------------|---------------------------|--------------------------------|-------------------------|
| Linux            | $HOME/.cache/helm         | $HOME/.config/helm             | $HOME/.local/share/helm |
| macOS            | $HOME/Library/Caches/helm | $HOME/Library/Preferences/helm | $HOME/Library/helm      |
| Windows          | %TEMP%\helm               | %APPDATA%\helm                 | %APPDATA%\helm          |

Usage:
  helm [command]

Available Commands:
  completion  generate autocompletion scripts for the specified shell
  create      create a new chart with the given name
  dependency  manage a chart's dependencies
  env         helm client environment information
  get         download extended information of a named release
  help        Help about any command
  history     fetch release history
  install     install a chart
  lint        examine a chart for possible issues
  list        list releases
  package     package a chart directory into a chart archive
  plugin      install, list, or uninstall Helm plugins
  pull        download a chart from a repository and (optionally) unpack it in local directory
  repo        add, list, remove, update, and index chart repositories
  rollback    roll back a release to a previous revision
  search      search for a keyword in charts
  show        show information of a chart
  status      display the status of the named release
  template    locally render templates
  test        run tests for a release
  uninstall   uninstall a release
  upgrade     upgrade a release
  verify      verify that a chart at the given path has been signed and is valid
  version     print the client version information

Flags:
      --debug                       enable verbose output
  -h, --help                        help for helm
      --kube-apiserver string       the address and the port for the Kubernetes API server
      --kube-as-group stringArray   group to impersonate for the operation, this flag can be repeated to specify multiple groups.
      --kube-as-user string         username to impersonate for the operation
      --kube-ca-file string         the certificate authority file for the Kubernetes API server connection
      --kube-context string         name of the kubeconfig context to use
      --kube-token string           bearer token used for authentication
      --kubeconfig string           path to the kubeconfig file
  -n, --namespace string            namespace scope for this request
      --registry-config string      path to the registry config file (default "/root/.config/helm/registry.json")
      --repository-cache string     path to the file containing cached repository indexes (default "/root/.cache/helm/repository")
      --repository-config string    path to the file containing repository names and URLs (default "/root/.config/helm/repositories.yaml")

Use "helm [command] --help" for more information about a command.

