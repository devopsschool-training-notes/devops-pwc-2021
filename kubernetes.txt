hostnamectl set-hostname rajesh.master.com

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.20.0.149:6443 --token hkg55c.4x34sua47vxw5sfb \
        --discovery-token-ca-cert-hash sha256:1f2f557fdc26451486d1274a7a188bf075d526fab2384149f244c6983424c7cf


NAME                              SHORTNAMES   APIVERSION                             NAMESPACED   KIND
bindings                                       v1                                     true         Binding
componentstatuses                 cs           v1                                     false        ComponentStatus
configmaps                        cm           v1                                     true         ConfigMap
endpoints                         ep           v1                                     true         Endpoints
events                            ev           v1                                     true         Event
limitranges                       limits       v1                                     true         LimitRange
namespaces                        ns           v1                                     false        Namespace
nodes                             no           v1                                     false        Node
persistentvolumeclaims            pvc          v1                                     true         PersistentVolumeClaim
persistentvolumes                 pv           v1            


                         false        PersistentVolume
pods                              po           v1                                     true         Pod
podtemplates                                   v1                                     true         PodTemplate
replicationcontrollers            rc           v1                                     true         ReplicationController
resourcequotas                    quota        v1                                     true         ResourceQuota
secrets                                        v1                                     true         Secret
serviceaccounts                   sa           v1                                     true         ServiceAccount
services                          svc          v1                                     true         Service
mutatingwebhookconfigurations                  admissionregistration.k8s.io/v1        false        MutatingWebhookConfiguration
validatingwebhookconfigurations                admissionregistration.k8s.io/v1        false        ValidatingWebhookConfiguration
customresourcedefinitions         crd,crds     apiextensions.k8s.io/v1                false        CustomResourceDefinition
apiservices                                    apiregistration.k8s.io/v1              false        APIService
controllerrevisions                            apps/v1                                true         ControllerRevision
daemonsets                        ds           apps/v1                                true         DaemonSet
deployments                       deploy       apps/v1                                true         Deployment
replicasets                       rs           apps/v1                                true         ReplicaSet
statefulsets                      sts          apps/v1                                true         StatefulSet
tokenreviews                                   authentication.k8s.io/v1               false        TokenReview
localsubjectaccessreviews                      authorization.k8s.io/v1                true         LocalSubjectAccessReview
selfsubjectaccessreviews                       authorization.k8s.io/v1                false        SelfSubjectAccessReview
selfsubjectrulesreviews                        authorization.k8s.io/v1                false        SelfSubjectRulesReview
subjectaccessreviews                           authorization.k8s.io/v1                false        SubjectAccessReview
horizontalpodautoscalers          hpa          autoscaling/v1                         true         HorizontalPodAutoscaler
cronjobs                          cj           batch/v1                               true         CronJob
jobs                                           batch/v1                               true         Job
certificatesigningrequests        csr          certificates.k8s.io/v1                 false        CertificateSigningRequest
leases                                         coordination.k8s.io/v1                 true         Lease
endpointslices                                 discovery.k8s.io/v1                    true         EndpointSlice
events                            ev           events.k8s.io/v1                       true         Event
ingresses                         ing          extensions/v1beta1                     true         Ingress
flowschemas                                    flowcontrol.apiserver.k8s.io/v1beta1   false        FlowSchema
prioritylevelconfigurations                    flowcontrol.apiserver.k8s.io/v1beta1   false        PriorityLevelConfiguration
ingressclasses                                 networking.k8s.io/v1                   false        IngressClass
ingresses                         ing          networking.k8s.io/v1                   true         Ingress
networkpolicies                   netpol       networking.k8s.io/v1                   true         NetworkPolicy
runtimeclasses                                 node.k8s.io/v1                         false        RuntimeClass
poddisruptionbudgets              pdb          policy/v1                              true         PodDisruptionBudget
podsecuritypolicies               psp          policy/v1beta1                         false        PodSecurityPolicy
clusterrolebindings                            rbac.authorization.k8s.io/v1           false        ClusterRoleBinding
clusterroles                                   rbac.authorization.k8s.io/v1           false        ClusterRole
rolebindings                                   rbac.authorization.k8s.io/v1           true         RoleBinding
roles                                          rbac.authorization.k8s.io/v1           true         Role
priorityclasses                   pc           scheduling.k8s.io/v1                   false        PriorityClass
csidrivers                                     storage.k8s.io/v1                      false        CSIDriver
csinodes                                       storage.k8s.io/v1                      false        CSINode
csistoragecapacities                           storage.k8s.io/v1beta1                 true         CSIStorageCapacity
storageclasses                    sc           storage.k8s.io/v1                      false        StorageClass
volumeattachments                              storage.k8s.io/v1                      false        VolumeAttachment
[root@rajesh ~]#


 31  kubectl get nodes
   32  kubectl get pods --all-namespaces
   33  kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
   34  kubectl get nodes
   35  kubectl get pods --all-namespaces
   36  clear
   37  kubectl get pods
   38  kubectl get nodes
   39  clear
   40  kubectl
   41  kubectl api-resources
   42  clear
   43  kubectl get ns
   44  kubectl get pods --all-namespaces

==========================================

namespace			
pod					ec2-instance or vm or container
replicationcontroller			asg
deployment				asg+++++
service					network Load Balancer


===============================================
56 API Resources - 56 API -->> API SERVER (KIND)

--------------------------------------------------------------
API 
	GET
	POST
	PUT
	DELETE
			
	CRUD
	-----------------------------
	CREATE
		YAML		create -f yml
		CMD		create
		
	READ
		YAML		
		CMD		get
				descrribe
	UPDATE
		YAML		apply -f yml
		CMD		edit
	DELETE
		YAML		delete -f yml
		CMD		delete




 44  kubectl get pods --all-namespaces
   45  history
   46  clear
   47  kubectl
   48  clear
   49  kubectl get ns
   50  kubectl create ns rajesh
   51  kubectl get ns
   52  kubectl edit ns rajesh
   53  kubectl get ns
   54  kubectl describe ns rajesh
   55  clear
   56  kubectl delete  ns rajesh

pod

apiVersion: v1
kind: Pod
metadata:
  name: nodehelloworld.example.com
  labels:
    app: helloworld
spec:
  containers:
  - name: devopsschool1
    image: scmgalaxy/nginx-devopsschoolv1
    ports:
    - name: nginx-port
      containerPort: 80



  56  kubectl delete  ns rajesh
   57  history
   58  clear
   59  ls
   60  mkdir k8
   61  cd k8
   62  ls
   63  clear
   64  vi pod1.yaml
   65  clear
   66  ls
   67  kubectl create -f pod1.yaml
   68  kubectl create -f pod1.yaml -n=rajesh
   69  kubectl create ns rajesh
   70  kubectl create -f pod1.yaml -n=rajesh
   71  kubectl create -f pod1.yaml
   72  kubectl get pods
   73  kubectl get pods -o wide
   74  curl http://10.44.0.1
   75  kubectl get pods --all-namespaces
   76  kubectl get pods -n=rajesh
   77  kubectl get pods -n=rajesh -o wide
   78  clear
   79  ls
   80  kubectl get pods
   81  kubectl edit pod nodehelloworld.example.com
   82  kubectl describe pod nodehelloworld.example.com
   83  :q
   84  clear
   85  ls
   86  vi pod1.yaml
   87  kubectl apply -f pod1.yaml
   88  kubectl describe pod nodehelloworld.example.com
   89  clear
   90  ls
   91  kubectl delete -f pod1.yaml
   92  kubectl get pods -n=rajesh
   93  kubectl delete pod nodehelloworld.example.com -n=rajesh



LAB -> YOU WOULD DO WHAT I DID
ASSIGNMENT:
- Write pom.yaml which contains 2 container
	- nginx # 80
	- mysql # 3306

& Share on BestDevOpsSchool.com 
Title - You can keep anything.
Content - 
CODE of the POD.yaml must be in CODE Block.
$ Share a URL WITH ME.


 118  clear
  119  ls
  120  vi rc.yaml
  121  kubectl apply -f rc.yaml
  122  vi rc.yaml
  123  kubectl get pod
  124  vi rc.yaml
  125  kubectl apply -f rc.yaml
  126  kubectl get pod
  127  clear
  128  kubectl get pod
  129  clear
  130  ls
  131  clear
  132  ls
  133  kubectl get pods
  134  clear
  135  kubectl get pods
  136  clear
  137  kubectl get pods
  138  kubectl delete pod replicationcontroller-example-zl2xb replicationcontroller-example-xxt4g replicationcontroller-example-whjmw replicationcontroller-example-v65xh replicationcontroller-example-t84j4 replicationcontroller-example-t29hs replicationcontroller-example-rfj8q replicationcontroller-example-pwqsk
  139  kubectl get pods
  140  kubectl get rc
  141  clear
  142  kubectl get rc
  143  kubectl delete rc replicationcontroller-example
  144  kubectl get rc
  145  kubectl get pods

kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 --replicas=3

kubectl scale--replicas=2 deployment/my-dep







[root@rajesh k8]# kubectl explain deploy.spec.strategy.rollingUpdate
KIND:     Deployment
VERSION:  apps/v1

RESOURCE: rollingUpdate <Object>

DESCRIPTION:
     Rolling update config params. Present only if DeploymentStrategyType =
     RollingUpdate.

     Spec to control the desired behavior of rolling update.

FIELDS:
   maxSurge     <string>
     The maximum number of pods that can be scheduled above the desired number
     of pods. Value can be an absolute number (ex: 5) or a percentage of desired
     pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number
     is calculated from percentage by rounding up. Defaults to 25%. Example:
     when this is set to 30%, the new ReplicaSet can be scaled up immediately
     when the rolling update starts, such that the total number of old and new
     pods do not exceed 130% of desired pods. Once old pods have been killed,
     new ReplicaSet can be scaled up further, ensuring that total number of pods
     running at any time during the update is at most 130% of desired pods.

   maxUnavailable       <string>
     The maximum number of pods that can be unavailable during the update. Value
     can be an absolute number (ex: 5) or a percentage of desired pods (ex:
     10%). Absolute number is calculated from percentage by rounding down. This
     can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set
     to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
     immediately when the rolling update starts. Once new pods are ready, old
     ReplicaSet can be scaled down further, followed by scaling up the new
     ReplicaSet, ensuring that the total number of pods available at all times
     during the update is at least 70% of desired pods.



 152  kubectl create -h
  153  clear
  154  kubectl create deployment -h
  155  clear
  156  kubectl get deploy
  157  kubectl get rc
  158  kubectl get pods
  159  kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 --replicas=3
  160  kubectl get pods
  161  kubectl get deploy
  162  kubectl edit deploy my-dep
  163  kubectl get deploy
  164  kubectl
  165  kubectl scale
  166  kubectl scale -h
  167  clear
  168  kubectl get deploy
  169  kubectl scale--replicas=2 deployment/my-dep
  170  kubectl scale --replicas=2 deployment/my-dep
  171  kubectl get deploy
  172  kubectl get pods
  173  kubectl delete pod my-dep-747b4ffb56-t92dp my-dep-747b4ffb56-tsz8s
  174  kubectl get pods
  175  clear
  176  ls
  177  kubectl rollout -h
  178  kubectl rollout history deploy/my-dep
  179  clear
  180  kubectl get -o wide
  181  kubectl get pods --o wide
  182  kubectl get pods -o wide
  183  curl http://10.44.0.2
  184  curl http://10.44.0.1
  185  kubectl rollout history deploy/my-dep
  186  clear
  187  ls
  188  kubectl edit deploy/my-dep
  189  kubectl get pods -o wide
  190  clear
  191  kubectl get pods -o wide
  192  curl http://10.44.0.2
  193  curl http://10.44.0.3

 194  kubectl rollout history deploy/my-dep
  195  clear
  196  ls
  197  clear
  198  kubectl explain
  199  kubectl explain ns
  200  kubectl explain ns.spec
  201  kubectl explain pods
  202  kubectl explain pods.spec
  203  kubectl explain pods.spec.containers
  204  clear
  205  kubectl explain deploy
  206  kubectl explain deploy.spec
  207  kubectl explain deploy.spec.strategy
  208  kubectl explain deploy.spec.strategy.rollingUpdate
  209  history
  210  clear
  211  kubectl get deploy
  212  kubectl delete deploy my-dep
  213  kubectl rollout undo -h
  214  clear
  215  ls
  216  kubectl get deploy
  217  kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 --replicas=15
  218  kubectl rollout history deploy/my-dep
  219  kubectl rollout status deploy/my-dep
  220  kubectl get pods -o wide
  221  curl http://10.44.0.5
  222  kubectl edit deploy/my-dep
  223  kubectl rollout history deploy/my-dep
  224  kubectl rollout status deploy/my-dep
  225  kubectl get pods -o wide
  226  curl http://10.44.0.12
  227  kubectl rollout status deploy/my-dep
  228  kubectl rollout history deploy/my-dep
  229  clear
  230  kubectl rollout undo deploy/my-dep --to-revision=1
  231  kubectl get pods -o wide
  232  kubectl rollout status deploy/my-dep
  233  kubectl get pods -o wide
  234  curl http://10.44.0.10
  235  history


Rollout
kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 --replicas=15
kubectl rollout history deploy/my-dep
kubectl rollout status deploy/my-dep
kubectl get pods -o wide
curl http://ip-of-pod
kubectl edit deploy/my-dep # Change image to scmgalaxy/nginx-devopsschoolv2
kubectl rollout history deploy/my-dep
kubectl rollout status deploy/my-dep
kubectl get pods -o wide
curl http://ip-of-pod

Rollback
kubectl rollout history deploy/my-dep
kubectl rollout undo deploy/my-dep --to-revision=1
kubectl rollout status deploy/my-dep
kubectl get pods -o wide
curl http://ip-of-pod



[root@rajesh k8]# kubectl explain deploy.spec.strategy.type
KIND:     Deployment
VERSION:  apps/v1

FIELD:    type <string>

DESCRIPTION:
     Type of deployment. Can be "Recreate" or "RollingUpdate". Default is
     RollingUpdate.
