Rajesh Kumar
=======================
Demo  - 
LAB  - '
============================
9:30 AM - 5:30 PM - 30 mins. 
------------------------
2 BREAK - 
	20 mins - 11 AM & 3.30 PM
======================================
Lunch - 1 Hour - 1 - 2 PM
--------------------------------------------
================================================================================
What is DevOps?
---------------------------
	Dev + Ops
	----------
	DEVOPS
==================================================================================================
		90s 					| 2000				|||| NOW
==================================================================================================
Deliver		CDs | Floopy		internet					Internet is using
--------------------------------------------------------------------------------------------------
Release 	1 YEAR			2 WEEKS						1 HOUR OR Few Sec

Feature 	SO MANY			1 FEATURE					1 FUNCTION

Platform 	Desktop			BROWSER						Devices

RUNNING		PHSYCIAL		VIRTUAL						Container

Users 		ISOLATED		CONNECTED					VERY MUCH CONNECTED
---------------------------------------------------------------------------------------------------
Org wants
	- Reduce a Software Dev Cost	- Reduce a Software Dev & RUNNING Cost		- Reduce a Software Dev & RUNNING Cost	
	- Improve Quality		- Improve Quality				- Improve Quality
					- Reduce a Release Cycle			- Reduce a Release Cycle		
					
				
Architecture 	Monolithic		SOA						Microservices


Model		Waterfall		Agile						DEVOPS	
--------------------------------------------------------------------------------------
TEAM ST 	Client			Client+Arch+Designer+DEV+QA			Client+Arch+Designer+DEV+QA+Ops+Support
		Arch					
		Designer		Ops+Support
		DEV			
		QA			
		Ops
		Support
										
--------------------------------------------------------------
DEVOPS	
	Combination of
	- best practices
	- best tools
	- Best & Effective process
	- Avoid unwated inherted things from past
	
	to help Employees & Employer to CHANGE a MINDET and WORKING CULTURE

	for 
	
	- Reduce a Software Dev & RUNNING Cost
	- Improve Quality
	- Reduce a Release Cycle
--------------------------------
	DEVOPS
		A Person who can CODE for a PRODUCT			JAVA
		+ A Person who can CODE for a TESTING PRODUCT		SELENIUM
		+ A Person who can CODE for a Infra & Ops		TERRAFORM





DEVOPS -> DevSecOps
-------------------
SRE
========================================================================================================

What is Docker?
--------------------------
	Container mgmt tool
	Written in Golang
	Release
		Communuity 
		Enterprise
	version - 20.X

	--- Docker Engine

	Tool
	- Saving cost
		- Saving App RUNNING COST (CPU + RAM + STO)
	- Saving time 
		- 1 DAY to 5 MINs to 1 SEC
	- Impr Eff* 
		- APP(DEV) --> APP(QA) --> APP(PROD)
		----------------------------------------
				1 SEC
				CLONE ONE

	What is Container?
	-------------------------------------------
	ISOLATE INDEPENDENT APp RUNN TIME ENV

	ONE USER From USER NS
		ATTACHED TO ONE ROOT from MNT NS
		ATTACHED TO ONE NET  from NET NS
		ATTACHED TO ONE PID  from PID NS
	
=========================================================================================
=========================================================================================
To RUN Any APP - What Resources we need?
-------------------------------------------------
HARDWARE
- CPU
- RAM
- STO
-----------
	OS
	- KERNEL			CAN CREATE	OS WOULD CREATE		APP NEED
		Namespace
			MNT(RFS)	UNLIMITED	1			1			
			USER		UNLIMITED	UNLIMITED		1	
			PID MAP		UNLIMITED	1			1
			NET		UNLIMITED	1			1
	
		ROOT FS
		USER
		PID
		NET

		cgroups 

	
kernel 
The kernel is a computer program at the core of a computer's operating system and has complete control over everything in the system.

cgroups 
cgroups is a Linux kernel feature that limits, accounts for, and isolates the resource usage of a collection of processes. 								----------------------
									CPU+RAM
FILESYSTEM
	- collections of files & dir for SOME PURPOSE.
	BOOT FILESYSTEM	AKA KERNAL FILESYSTEM		windows & linux
	ROOT FILESYSTEM	ubuntu - fedroa - centos - rhel - amazon - kali - suse - windows 10
	USER FILESYSTEM
	APP FILESYSTEM


Evolution of Computing
================================================================
PHYSCIAL 			Virtual 			Container


Other tools - https://www.devopsschool.com/blog/list-of-top-container-runtime-interface-projects/


URL : https://cloud.cdp.rpsconsulting.in/console/#

Passwod  - Password@1


Hema Shankar Gaonkar	1 DP-User01
Anusha Adudodla	2 DP-User02
ABHINAV KUMAR	3 DP-User03
Avinash Mallik	4 DP-User04
Harish C	5 DP-User05
Abhishek Reddy	6 DP-User06
Avinash Soni	7 DP-User07
Anubhab Pahari	8 DP-User08
Gorla Narasimha Reddy	9 DP-User09
BHARGAVI KADAKANCHI	10 DP-User10
GODWIN PK	11 DP-User11
Arindam Chakraborty	12 DP-User12
G Jyoshna	13 DP-User13
JUDITH SOUNDARYA	14 DP-User14
Akshatha Ashwathnarayan	15 DP-User15
Ragipindi Anitha	16 DP-User16
Gorla Narasimha Reddy	17 DP-User17
manideep	18 DP-User18


Windows server password -admin@123

Centos password â€“ rps/rps@123
 
How get IP address from terminal
$ ifconfig
Centos - 192.168.220.129
Root password- root/redhat 

How to install docker?
https://devopsschool.com/tutorial/docker/install-config/docker-install-commuityedition-centos-rhel.html

=========================================================================

What is Docker?
Why Docker?
What is Container?

Docker Arch?
===========================================
Human -> Docker client ---> Docker Deamon -> ContainerD -> KERNEL
	-------------------------------------
		Docker Engine

Docker Components
==================================================
1. Docker Engine

2. Docker Image
----------------------

-----------------------------
ROOT FS + USER FS + APP FS
-------------------------------------
/...... + root +   ls

ubuntu = rootfs
tomcat = rootfs + java + tomcat
centos = rootfs

FROM 1 Image --- you can create multiple container


Vm Images
-----------------------------
BOOT FS + ROOT FS + USER FS + APP FS
-------------------------------------
KERNEL  + /...... + root +   ls

3. Registry
		Repository
			  version of file system



		hub.docker.com
		nexus
		artifactory

4. Container

Human --> Client --> Server
			IMAGE IN LOCAL REPO
			- YES --------------------> ContainerD ---> Kernal

			- NO --> Docker Image from HUB to LR ->  ContainerD ---> Kernal


			KERNAL Create
					1 USER
					1 NET
					1 PID MAP
					1 MOUNT from 1 COPY of  Image

					&&& 		
					ATTACH NET + PID + MNT to USER.== CONTAINER

====================================================================================
Container Lifecycle
create --> start -> stop -> start -> restart -> pause -> unpause -> kill -> remove
====================================================================================
Vms Lifecycle
--------------
create --> start -> stop -> start -> restart -> pause -> unpause -> kill -> remove

DECIDE WHAT IMAGE?
----------------------------
httpd
--------------
rootfs + httpd

 12  which docker
   13  which dockerd
   14  which containerd
   15  ps -eaf | grep docker
   16  clear
   17  ls
   18  docker info
   19  clear
   20  docker -v
   21  docker version
   22  clear
   23  docker images
   24  docker ps
   25  docker ps -a
   26  docker pull httpd
   27  clear
   28  docker images
   29  docker ps -a
   30  docker create httpd
   31  docker ps -a
   32  docker create httpd
   33  docker ps -a
   34  docker start 94a76dd5327f
   35  docker ps -a
   36  docker start f5ecf459c4f9
   37  docker ps -a
   38  docker stop f5ecf459c4f9
   39  docker ps -a
   40  docker restart 94a76dd5327f
   41  docker ps -a
   42  docker pause 94a76dd5327f
   43  docker ps -a
   44  docker unpause 94a76dd5327f
   45  docker ps -a
   46  docker kill  94a76dd5327f
   47  docker ps -a
   48  docker rm 94a76dd5327f f5ecf459c4f9 d367d045ce2d
   49  docker ps -a
   50  history
   
   
   Assignment
   ------------------------------
   DIFF Between KILL and STOP
   diff between Pause and Unpause 
   
   
   
   
   
   
   
   
   
   
   











